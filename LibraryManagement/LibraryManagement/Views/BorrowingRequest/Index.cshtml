@using X.PagedList.Mvc.Core
@using X.PagedList
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Web.Common

@model IPagedList<Book>
@{
    Layout = "_NormalUserLayout";
    ViewData["Title"] = "Viewing Book Page";
}
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
<style>
    .book-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
    }
    
    .book-item {
        flex: 1 0 20%; 
        margin: 10px;
        box-sizing: border-box;
    }
    .book-item img {
        width: 100%;
        max-width: 200px; 
        height: 150px;
    }
</style>
@* <form asp-action="Index" method="get"> *@
@*     <input type="text" name="searchTerm" placeholder="Search books..." /> *@
@* </form> *@
<br/>
<form asp-action="CreateBorrowingRequest" asp-controller="BorrowingRequest" method="post">
    <input type="submit" value="Request Borrowing" class="btn btn-success" />
</form>
@if (TempData["Message"] != null)
{
    <div class="alert alert-success">@TempData["Message"]</div>
}
@if (TempData["Warning"] != null)
{
    <div class="alert alert-danger">@TempData["Warning"]</div>
}
<div class="book-container">
    @foreach (var item in Model)
    {
        <div class="book-item">
            <a href="@Url.Action("Details", "Book", new { id = item.BookId })" method ="get">
                <div class="book-item">
                    <img src="@item.Cover" alt="Cover of @item.Title" />  
                    <div>@item.Title</div>
                </div>
            </a>
        </div>
    }
</div>
<div class="text-center mt-3">
    <a asp-action="Index" asp-controller="BorrowingRequest" class="btn btn-primary">Back to Home Page</a>
</div>

@Html.PagedListPager(Model, page => Url.Action("Index", new { page}), 
    new PagedListRenderOptions 
    { 
        DisplayLinkToFirstPage = PagedListDisplayMode.Always, 
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        LinkToFirstPageFormat = "<<",
        LinkToPreviousPageFormat = "<",
        LinkToNextPageFormat = ">",
        LinkToLastPageFormat = ">>",
        MaximumPageNumbersToDisplay = 5,
        DisplayEllipsesWhenNotShowingAllPageNumbers = false,
        PageClasses = new[] { "page-item" },
    })
<script>
$(document).ready(function () {
        // When the page size dropdown changes
        $("#pageSize").change(function () {
            // Redirect to the same action method with the selected page size as a query string parameter
            window.location.href = "?pageSize=" + $(this).val();
        });
    });
 $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })
$('#search_input').on('keyup', function() {
    var value = $(this).val().toLowerCase();

    $('.book-item').each(function() {
        var title = $(this).find('div').text().toLowerCase();
        if (title.indexOf(value) > -1) {
            $(this).show();
        } else {
            $(this).hide();
        }
    });
});
</script>
