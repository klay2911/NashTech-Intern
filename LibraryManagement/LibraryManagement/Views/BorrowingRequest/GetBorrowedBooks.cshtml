@using X.PagedList.Mvc.Core
@using X.PagedList
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Web.Common

@model IPagedList<BookViewModel>

@{
    Layout = "_NormalUserLayout";
    ViewData["Title"] = "Borrowed Books Page";
}
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>

<table class="table">
    <thead>
    <tr>
        <th>@Html.DisplayNameFor(model => model.First().Title)</th>
        <th>@Html.DisplayNameFor(model => model.First().Author)</th>
        <th>@Html.DisplayNameFor(model => model.First().ISBN)</th>
        <th>@Html.DisplayNameFor(model => model.First().Status)</th>
        <th>Action</th> 
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.Title)</td>
            <td>@Html.DisplayFor(modelItem => item.Author)</td>
            <td>@Html.DisplayFor(modelItem => item.ISBN)</td>
            <td>@Html.DisplayFor(modelItem => item.Status)</td>
            <td>
                @if (item.Status == "Approved" && DateTime.Now <= item.ExpiryDate)
                {
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#pdfModal-@item.BookId">
                        <i class="bi bi-eye-fill"></i> 
                    </button>
                    <div class="modal fade" id="pdfModal-@item.BookId" tabindex="-1" role="dialog" aria-labelledby="pdfModalLabel-@item.BookId" aria-hidden="true">
                        <div class="modal-dialog modal-lg " style="max-width: 95%; max-height: 520px;">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="pdfModalLabel-@item.BookId">@item.Title</h5>
                                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">Ã—</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <div style="position:absolute; top:0; left:0; width:95%; height:100%; z-index:9999;"></div>
                                    <embed id="@("pdfEmbed-" + item.BookId)" src="@Url.Content(item.PdfFilePath + "#toolbar=0&navpanes=0")" type="application/pdf" style="width:100%; height:570px;" frameborder="0"/>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <button type="button" class="btn btn-primary disabled">
                        <i class="bi bi-eye-fill"></i>
                    </button>
                }
            </td>
        </tr>
    }
    </tbody>
</table>
@Html.PagedListPager(Model, page => Url.Action("GetBorrowedBooks", new { page, searchTerm = ViewBag.SearchTerm }), 
    new PagedListRenderOptions 
    { 
        DisplayLinkToFirstPage = PagedListDisplayMode.Always, 
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        LinkToFirstPageFormat = "<<",
        LinkToPreviousPageFormat = "<",
        LinkToNextPageFormat = ">",
        LinkToLastPageFormat = ">>",
        MaximumPageNumbersToDisplay = 5,
        DisplayEllipsesWhenNotShowingAllPageNumbers = false,
        PageClasses = new[] { "page-item" },
    })
<div class="text-center mt-3">
    <a asp-action="Index" asp-controller="BorrowingRequest" class="btn btn-primary">Back to Home Page</a>
</div>
<script>
$(document).ready(function () {
        // When the page size dropdown changes
        $("#pageSize").change(function () {
            // Redirect to the same action method with the selected page size as a query string parameter
            window.location.href = "?pageSize=" + $(this).val();
        });
    });
 $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })
$(window).on('unload', function() {
    var pdfEmbed = $('.modal.show embed');

    if (pdfEmbed.length > 0) {
        var pageNumber = PDFViewerApplication.page;

        var bookId = pdfEmbed.attr('id').split('-')[1];

        $.ajax({
            url: '/BorrowingRequestController/SaveLastReadPageNumber',
            type: 'POST',
            data: {
                bookId: bookId, // The ID of the current book
                pageNumber: pageNumber  // The last read page number
            },
            success: function() {
                // Handle successful response from server
                console.log('Page number saved successfully');
            },
            error: function(xhr, status, error) {
                // Handle error response from server
                console.error('Error saving page number: ' + error);
            }
        });
    }
});
</script>
<script>
$('#search_input').on('keyup', function() {
    var value = $(this).val().toLowerCase();

    // Filter for table
    $('table tbody tr').filter(function() {
        $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
    });

    // Filter for book items
    $('.book-item').filter(function() {
        $(this).toggle($(this).find('div').text().toLowerCase().indexOf(value) > -1)
    });
});
</script>