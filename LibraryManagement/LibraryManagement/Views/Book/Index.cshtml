@using X.PagedList.Mvc.Core
@using X.PagedList
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Web.Common

@model IPagedList<Book>

@{
    Layout = "_SuperUserLayout";
    ViewData["Title"] = "Book Page";
}
<head>
    <style>
    .pagination li a {
        border: 1px solid #ddd; /* Gray */
        margin: 0 4px;
        padding: 10px 12px;
        text-decoration: none;
        transition: background-color .3s;
    }
    
    .pagination li.active a {
        background-color: #4CAF50; /* Green */
        color: white;
    }
        </style>
</head>
<form asp-action="Index" method="get">
    <input type="text" name="searchTerm" placeholder="Search books..." />
    <input type="submit" value="Search" />
</form>
<form asp-action="Create" method="get">
    <input type="submit" value="Add new book" class="btn btn-success" />
</form>
@if (TempData["Message"] != null)
{
    <div class="alert alert-success">@TempData["Message"]</div>
}
<table class="table">
    <thead>
    <tr>
        <th>@Html.DisplayNameFor(model => model.First().Title)</th>
        <th>@Html.DisplayNameFor(model => model.First().Author)</th>
        <th>@Html.DisplayNameFor(model => model.First().ISBN)</th>
        <th>@Html.DisplayNameFor(model => model.First().Category.CategoryName)</th>
        <th>Action</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.Title)</td>
            <td>@Html.DisplayFor(modelItem => item.Author)</td>
            <td>@Html.DisplayFor(modelItem => item.ISBN)</td>
            <td>@Html.DisplayFor(modelItem => item.Category.CategoryName)</td>
            <td>
                @Html.ActionLink("Edit", "Update", new { id = item.BookId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.BookId }) |
            </td>
        </tr>
    }
    </tbody>
</table>
<div class="text-center mt-3">
    <a asp-action="ViewBorrowingRequests" asp-controller="BorrowingRequest" class="btn btn-primary">Back to Home Page</a>
</div>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page }), 
    new PagedListRenderOptions 
    { 
        DisplayLinkToFirstPage = PagedListDisplayMode.Always, 
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        LinkToFirstPageFormat = "<< First",
        LinkToPreviousPageFormat = "< Previous",
        LinkToNextPageFormat = "Next >",
        LinkToLastPageFormat = "Last >>",
        MaximumPageNumbersToDisplay = 5,
        DisplayEllipsesWhenNotShowingAllPageNumbers = false
    })